{
  "openapi": "3.0.0",
  "info": {
    "title": "Course Management API",
    "version": "1.0.0",
    "description": "API Documentation for Course Management System"
  },
  "servers": [
    {
      "url": "http://26.237.20.46:5001",
      "description": "Dev server"
    },
    {
      "url": "http://localhost:5001",
      "description": "Local server"
    }
  ],
  "paths": {
    "/api/auth/register": {
      "post": {
        "summary": "Register a new user",
        "tags": [
          "Auth"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "example": "johndoe@example.com"
                  },
                  "password": {
                    "type": "string",
                    "example": "password123"
                  },
                  "role": {
                    "type": "string",
                    "example": "USER/ADMIN"
                  }
                },
                "required": [
                  "email",
                  "password",
                  "role"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User registered successfully"
          },
          "400": {
            "description": "Bad request"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/api/auth/login": {
      "post": {
        "summary": "Login a user",
        "tags": [
          "Auth"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User logged in successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/api/books": {
      "get": {
        "summary": "Get all books",
        "tags": [
          "Book"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "List of all books",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Book"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error"
          }
        }
      },
      "post": {
        "summary": "Create a new book record",
        "tags": [
          "Book"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Book"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Book record created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Book"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/api/books/{id}": {
      "get": {
        "summary": "Get a specific book record",
        "tags": [
          "Book"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Book record retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Book"
                }
              }
            }
          },
          "404": {
            "description": "Book not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      },
      "put": {
        "summary": "Update a specific book record",
        "tags": [
          "Book"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Book"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Book record updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Book"
                }
              }
            }
          },
          "404": {
            "description": "Book not found"
          },
          "400": {
            "description": "Bad request"
          },
          "500": {
            "description": "Server error"
          }
        }
      },
      "delete": {
        "summary": "Delete a specific book record",
        "tags": [
          "Book"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Book record deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Book deleted"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Book not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/api/visitors": {
      "get": {
        "summary": "Get all visitors",
        "tags": [
          "Visitor"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "List of all visitors",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Visitor"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error"
          }
        }
      },
      "post": {
        "summary": "Create a new visitor record",
        "tags": [
          "Visitor"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Visitor"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Visitor record created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Visitor"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/api/visitors/{id}": {
      "get": {
        "summary": "Get a specific visitor record",
        "tags": [
          "Visitor"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Visitor record retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Visitor"
                }
              }
            }
          },
          "404": {
            "description": "Visitor not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      },
      "put": {
        "summary": "Update a specific visitor record",
        "tags": [
          "Visitor"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Visitor"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Visitor record updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Visitor"
                }
              }
            }
          },
          "404": {
            "description": "Visitor not found"
          },
          "400": {
            "description": "Bad request"
          },
          "500": {
            "description": "Server error"
          }
        }
      },
      "delete": {
        "summary": "Delete a specific visitor record",
        "tags": [
          "Visitor"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Visitor record deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Visitor deleted"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Visitor not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/api/news": {
      "get": {
        "summary": "Get all news",
        "tags": [
          "News"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "List of all news",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/News"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error"
          }
        }
      },
      "post": {
        "summary": "Create a new news item",
        "tags": [
          "News"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/News"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "News item created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/News"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/api/news/{id}": {
      "get": {
        "summary": "Get a specific news item",
        "tags": [
          "News"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "News item retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/News"
                }
              }
            }
          },
          "404": {
            "description": "News item not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      },
      "put": {
        "summary": "Update a specific news item",
        "tags": [
          "News"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/News"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "News item updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/News"
                }
              }
            }
          },
          "404": {
            "description": "News item not found"
          },
          "400": {
            "description": "Bad request"
          },
          "500": {
            "description": "Server error"
          }
        }
      },
      "delete": {
        "summary": "Delete a specific news item",
        "tags": [
          "News"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "News item deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "News deleted"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "News item not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/photos/news/{filename}": {
      "get": {
        "summary": "Get news photo",
        "tags": [
          "Photos"
        ],
        "parameters": [
          {
            "name": "filename",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Name of the photo file"
          }
        ],
        "responses": {
          "200": {
            "description": "Photo retrieved successfully",
            "content": {
              "photo/png": {},
              "photo/jpeg": {}
            }
          },
          "404": {
            "description": "Photo not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/photos/books/{filename}": {
      "get": {
        "summary": "Get book photo",
        "tags": [
          "Photos"
        ],
        "parameters": [
          {
            "name": "filename",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Name of the photo file"
          }
        ],
        "responses": {
          "200": {
            "description": "Photo retrieved successfully",
            "content": {
              "photo/png": {},
              "photo/jpeg": {}
            }
          },
          "404": {
            "description": "Photo not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/photos/visitors/{filename}": {
      "get": {
        "summary": "Get visitor photo",
        "tags": [
          "Photos"
        ],
        "parameters": [
          {
            "name": "filename",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Name of the photo file"
          }
        ],
        "responses": {
          "200": {
            "description": "Photo retrieved successfully",
            "content": {
              "photo/png": {},
              "photo/jpeg": {}
            }
          },
          "404": {
            "description": "Photo not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/photos/gallery/{filename}": {
      "get": {
        "summary": "Get gallery photo",
        "tags": [
          "Photos"
        ],
        "parameters": [
          {
            "name": "filename",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Name of the photo file"
          }
        ],
        "responses": {
          "200": {
            "description": "Photo retrieved successfully",
            "content": {
              "photo/png": {},
              "photo/jpeg": {}
            }
          },
          "404": {
            "description": "Photo not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/photos/news": {
      "post": {
        "summary": "Upload news photo",
        "tags": [
          "Photos"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "photo": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Photo uploaded successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Photo uploaded successfully"
                    },
                    "filename": {
                      "type": "string",
                      "example": "1627884399610-photo.png"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/photos/books": {
      "post": {
        "summary": "Upload book photo",
        "tags": [
          "Photos"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "photo": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Photo uploaded successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Photo uploaded successfully"
                    },
                    "filename": {
                      "type": "string",
                      "example": "1627884399610-photo.png"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/photos/visitors": {
      "post": {
        "summary": "Upload visitor photo",
        "tags": [
          "Photos"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "photo": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Photo uploaded successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Photo uploaded successfully"
                    },
                    "filename": {
                      "type": "string",
                      "example": "1627884399610-photo.png"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/photos/gallery": {
      "post": {
        "summary": "Upload gallery photo",
        "tags": [
          "Photos"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "photo": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Photo uploaded successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Photo uploaded successfully"
                    },
                    "filename": {
                      "type": "string",
                      "example": "1627884399610-photo.png"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "email": {
            "type": "string"
          },
          "role": {
            "type": "string",
            "enum": [
              "ADMIN",
              "USER"
            ]
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "email",
          "password",
          "role"
        ]
      },
      "LoginRequest": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        },
        "required": [
          "email",
          "password"
        ]
      },
      "LoginResponse": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string"
          }
        }
      },
      "Book": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "title": {
            "type": "string"
          },
          "author": {
            "type": "string"
          },
          "genre": {
            "type": "string",
            "enum": [
              "Наукова фантастика",
              "Фантастика",
              "Мелодрама",
              "Містика",
              "Художня література"
            ]
          },
          "description": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": [
              "В наявності",
              "Видана на руки"
            ]
          },
          "borrowerId": {
            "type": "integer",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "Visitor": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "surname": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "age": {
            "type": "integer"
          },
          "email": {
            "type": "string",
            "format": "email"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "News": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "title": {
            "type": "string"
          },
          "text": {
            "type": "string"
          },
          "photoPath": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "title",
          "text"
        ]
      }
    }
  }
}
